{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","services/contactsApi.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsReducer","createReducer","_","payload","state","filter","contact","id","isLoading","filterReducer","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","Container","children","className","s","axios","defaults","baseURL","fetchAddContact","post","fetchDeleteContact","delete","getContacts","dispatch","a","get","data","addContact","name","number","deleteContact","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useSelector","contactsSelectors","useForm","register","handleSubmit","errors","reset","control","onSubmit","find","toast","info","contactsOperations","form","label","type","ref","minLength","value","message","maxLength","required","input","placeholder","as","InputMask","rules","defaultValue","mask","button","ContactList","visibleContacts","useEffect","length","list","map","listItem","onClick","Filter","onChange","event","contactsActions","target","App","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.becbfe2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2v9xs\",\"label\":\"ContactForm_label__5Ixjw\",\"input\":\"ContactForm_input__UpvLW\",\"button\":\"ContactForm_button__1DNPZ ContactForm_input__UpvLW\",\"errors\":\"ContactForm_errors__a6FjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2fCiQ\",\"listItem\":\"ContactList_listItem__Wr03k\",\"button\":\"ContactList_button__1VQ17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__35pJI\",\"input\":\"Filter_input__3Wi-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__XUxM2\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-action';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => {\r\n      return contact.id !== payload;\r\n    }),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  isLoading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import s from './Container.module.css';\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => {\r\n  return axios.get('/contacts');\r\n};\r\n\r\nexport const fetchAddContact = contact => {\r\n  return axios.post(`/contacts`, contact);\r\n};\r\n\r\nexport const fetchDeleteContact = id => {\r\n  return axios.delete(`/contacts/${id}`);\r\n};\r\n","import {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-action';\r\n\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContact,\r\n  fetchDeleteContact,\r\n} from '../../services/contactsApi';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await fetchAddContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await fetchDeleteContact(id);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { useForm, Controller } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport InputMask from 'react-input-mask';\n// import * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const { register, handleSubmit, errors, reset, control } = useForm();\n\n  const onSumbit = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      toast.info(`🙄 ${name} is already in contacts!`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      toast.info('This number is already in contacts!');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSumbit)} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          ref={register({\n            minLength: { value: 2, message: 'Too short name' },\n            maxLength: { value: 20, message: 'Too long name' },\n            required: 'Is a required field',\n          })}\n          className={s.input}\n          placeholder=\"Enter name\"\n        />\n        {errors.name && <p className={s.errors}>{errors.name.message}</p>}\n      </label>\n      <label className={s.label}>\n        Number\n        <Controller\n          as={InputMask}\n          name=\"number\"\n          rules={{\n            required: 'Phone number is required',\n          }}\n          defaultValue=\"\"\n          control={control}\n          className={s.input}\n          placeholder=\"+38 (___) ___-__-__\"\n          mask=\"+38 (999) 999-99-99\"\n          // value=\"10\"\n        />\n        {errors.number && <p className={s.errors}>{errors.number.message}</p>}\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// old input number\n// {\n/* <input\n          type=\"tel\"\n          name=\"number\"\n          ref={register({\n            required: 'Is a required field',\n            minLength: { value: 10, message: 'Too short number' },\n            maxLength: { value: 20, message: 'Too long number' },\n            pattern: {\n              value: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\n              message: 'work',\n            },\n          })}\n          className={s.input}\n          placeholder=\"Enter number\"\n        />\n        {errors.number && <p className={s.errors}>{errors.number.message}</p>} */\n// }\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.getContacts()), [dispatch]);\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <ul className={s.list}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li key={id} className={s.listItem}>\n              <p>\n                {name}: {number}\n              </p>\n              <button\n                type=\"button\"\n                className={s.button}\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Your phonebook is empty. Add contact.</p>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts.length > 1 && (\n        <label className={s.label}>\n          Find contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            placeholder=\"Enter name\"\n            value={filter}\n            onChange={event =>\n              dispatch(contactsActions.changeFilter(event.target.value))\n            }\n          />\n        </label>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store.store}>\n//       <PersistGate loading={null} persistor={store.persistor}>\n//         <App />\n//       </PersistGate>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}